// Auth-Service 精简数据库设计，仅保留核心三表

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id                        String               @id @default(uuid())
  email                     String               @unique
  phone                     String?              @unique
  store_name                String?
  subdomain                 String?              @unique
  password_hash             String
  address                   String?
  email_verified_at         DateTime?
  email_verification_code   String?
  email_verification_code_expires_at DateTime?
  created_at                DateTime             @default(now())
  updated_at                DateTime             @updatedAt
  deleted_at                DateTime?

  sessions                  Session[]
  password_reset_tokens     PasswordResetToken[]

  @@map("tenants")
}

model Session {
  id             String    @id @default(uuid())
  tenant_id      String
  token_jti      String    @unique
  refresh_token  String?   @unique
  user_agent     String?
  ip_address     String?
  device_type    String?
  expires_at     DateTime
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  tenant         Tenant    @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@index([tenant_id])
  @@map("sessions")
}

model PasswordResetToken {
  id              String    @id @default(uuid())
  tenant_id       String
  email           String
  reset_token     String    @unique
  expires_at      DateTime
  used_at         DateTime?
  created_at      DateTime  @default(now())

  tenant          Tenant    @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@index([email])
  @@index([expires_at])
  @@map("password_reset_tokens")
} 