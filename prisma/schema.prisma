// 多支付提供商订阅管理数据库设计
// Multi-Payment Provider Subscription Management Database Design

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 核心租户表 - 简化版，移除支付和订阅字段
model Tenant {
  id                          String   @id @default(uuid()) @db.Uuid
  email                       String   @unique @db.VarChar(255)
  password_hash               String   @db.VarChar(255)
  store_name                  String   @db.VarChar(100)
  subdomain                   String   @unique @db.VarChar(50)
  phone                       String   @unique @db.VarChar(20)
  address                     String?  @db.VarChar(500)
  
  // 系统字段
  email_verified_at           DateTime?
  password_reset_token        String?  @db.VarChar(255)
  password_reset_expires_at   DateTime?
  email_verification_token    String?  @db.VarChar(255)
  
  // 时间戳
  created_at                  DateTime @default(now())
  updated_at                  DateTime @updatedAt
  
  // 关联关系
  sessions                    Session[]
  subscriptions               Subscription[]
  payment_integrations        PaymentIntegration[]
  payment_methods             PaymentMethod[]
  payment_events              PaymentEvent[]
  invoices                    Invoice[]
  subscription_history        SubscriptionHistory[]
  
  // 索引
  @@index([email])
  @@index([subdomain])
  @@index([phone])
  @@index([created_at])
  
  @@map("tenants")
}

// 订阅管理表
model Subscription {
  id                     String             @id @default(uuid()) @db.Uuid
  tenant_id              String             @db.Uuid
  
  // 订阅状态 (内部业务状态)
  status                 SubscriptionStatus @default(TRIAL)
  plan                   SubscriptionPlan   @default(BASIC)
  
  // 订阅周期
  billing_cycle          String             @default("monthly") @db.VarChar(20) // monthly/yearly
  current_period_start   DateTime?
  current_period_end     DateTime?
  trial_ends_at          DateTime?
  
  // 取消管理
  cancel_at_period_end   Boolean            @default(false)
  canceled_at            DateTime?
  cancellation_reason    String?            @db.VarChar(255)
  
  // 定价信息
  currency               String             @default("CAD") @db.VarChar(3)
  amount_cents           Int?               // 金额（分）
  
  // 时间戳
  created_at             DateTime           @default(now())
  updated_at             DateTime           @updatedAt
  
  // 关联关系
  tenant                 Tenant             @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  payment_integrations   PaymentIntegration[]
  invoices               Invoice[]
  subscription_history   SubscriptionHistory[]
  
  // 索引
  @@index([tenant_id])
  @@index([status])
  @@index([current_period_end])
  @@index([cancel_at_period_end])
  @@index([trial_ends_at])
  
  @@map("subscriptions")
}

// 支付提供商集成表
model PaymentIntegration {
  id                       String          @id @default(uuid()) @db.Uuid
  tenant_id                String          @db.Uuid
  subscription_id          String          @db.Uuid
  
  // 支付提供商信息
  provider                 PaymentProvider
  provider_customer_id     String          @db.VarChar(255)
  provider_subscription_id String?         @db.VarChar(255)
  
  // 提供商特定数据 (JSON存储)
  provider_data            Json?
  
  // 状态映射
  provider_status          String?         @db.VarChar(50) // 提供商原始状态
  last_sync_at             DateTime?
  sync_error               String?         @db.Text
  
  // 配置信息
  is_active                Boolean         @default(true)
  webhook_endpoint         String?         @db.VarChar(255)
  
  // 时间戳
  created_at               DateTime        @default(now())
  updated_at               DateTime        @updatedAt
  
  // 关联关系
  tenant                   Tenant          @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  subscription             Subscription    @relation(fields: [subscription_id], references: [id], onDelete: Cascade)
  payment_events           PaymentEvent[]
  invoices                 Invoice[]
  
  // 约束和索引
  @@unique([provider, provider_customer_id])
  @@unique([provider, provider_subscription_id])
  @@index([tenant_id])
  @@index([subscription_id])
  @@index([provider])
  @@index([provider_customer_id])
  @@index([provider_subscription_id])
  @@index([is_active])
  
  @@map("payment_integrations")
}

// 支付方式表
model PaymentMethod {
  id                         String          @id @default(uuid()) @db.Uuid
  tenant_id                  String          @db.Uuid
  
  // 支付方式信息
  provider                   PaymentProvider
  provider_payment_method_id String          @db.VarChar(255)
  
  // 支付方式类型和信息
  type                       String          @db.VarChar(20) // card/bank_account/wallet
  brand                      String?         @db.VarChar(20) // visa/mastercard/amex
  last4                      String?         @db.VarChar(4)
  exp_month                  Int?
  exp_year                   Int?
  
  // 状态管理
  is_default                 Boolean         @default(false)
  is_active                  Boolean         @default(true)
  
  // 提供商特定数据
  provider_data              Json?
  
  // 时间戳
  created_at                 DateTime        @default(now())
  updated_at                 DateTime        @updatedAt
  
  // 关联关系
  tenant                     Tenant          @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  payment_events             PaymentEvent[]
  
  // 约束和索引
  @@unique([provider, provider_payment_method_id])
  @@index([tenant_id])
  @@index([provider])
  @@index([is_default])
  @@index([is_active])
  
  @@map("payment_methods")
}

// 支付事件表
model PaymentEvent {
  id                     String              @id @default(uuid()) @db.Uuid
  tenant_id              String              @db.Uuid
  subscription_id        String?             @db.Uuid
  payment_integration_id String?             @db.Uuid
  payment_method_id      String?             @db.Uuid
  
  // 事件信息
  provider               PaymentProvider
  provider_event_id      String              @unique @db.VarChar(255)
  event_type             String              @db.VarChar(100)
  
  // 处理状态
  processed              Boolean             @default(false)
  processed_at           DateTime?
  retry_count            Int                 @default(0)
  max_retries            Int                 @default(3)
  
  // 事件数据
  event_data             Json?
  error_message          String?             @db.Text
  
  // 时间戳
  created_at             DateTime            @default(now())
  updated_at             DateTime            @updatedAt
  
  // 关联关系
  tenant                 Tenant              @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  payment_integration    PaymentIntegration? @relation(fields: [payment_integration_id], references: [id])
  payment_method         PaymentMethod?      @relation(fields: [payment_method_id], references: [id])
  subscription_history   SubscriptionHistory[]
  
  // 索引
  @@index([tenant_id])
  @@index([subscription_id])
  @@index([provider])
  @@index([event_type])
  @@index([processed])
  @@index([retry_count])
  @@index([created_at])
  
  @@map("payment_events")
}

// 订阅历史表
model SubscriptionHistory {
  id               String             @id @default(uuid()) @db.Uuid
  tenant_id        String             @db.Uuid
  subscription_id  String             @db.Uuid
  
  // 变更信息
  action           String             @db.VarChar(50) // created/updated/canceled/renewed/suspended
  
  // 状态变更
  old_status       SubscriptionStatus?
  new_status       SubscriptionStatus?
  old_plan         SubscriptionPlan?
  new_plan         SubscriptionPlan?
  
  // 关联事件
  payment_event_id String?            @db.Uuid
  
  // 变更详情
  changes          Json?              // 详细的变更内容
  reason           String?            @db.VarChar(255)
  
  // 时间戳
  created_at       DateTime           @default(now())
  
  // 关联关系
  tenant           Tenant             @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  subscription     Subscription       @relation(fields: [subscription_id], references: [id], onDelete: Cascade)
  payment_event    PaymentEvent?      @relation(fields: [payment_event_id], references: [id])
  
  // 索引
  @@index([tenant_id])
  @@index([subscription_id])
  @@index([action])
  @@index([created_at])
  
  @@map("subscription_history")
}

// 发票表
model Invoice {
  id                     String              @id @default(uuid()) @db.Uuid
  tenant_id              String              @db.Uuid
  subscription_id        String              @db.Uuid
  payment_integration_id String?             @db.Uuid
  
  // 发票信息
  provider               PaymentProvider?
  provider_invoice_id    String?             @db.VarChar(255)
  invoice_number         String?             @db.VarChar(100)
  
  // 金额信息
  currency               String              @default("CAD") @db.VarChar(3)
  subtotal_cents         Int
  tax_cents              Int                 @default(0)
  total_cents            Int
  
  // 状态管理
  status                 String              @db.VarChar(20) // draft/open/paid/void/uncollectible
  
  // 时间信息
  period_start           DateTime?
  period_end             DateTime?
  due_date               DateTime?
  paid_at                DateTime?
  
  // 发票数据
  invoice_data           Json?
  
  // 时间戳
  created_at             DateTime            @default(now())
  updated_at             DateTime            @updatedAt
  
  // 关联关系
  tenant                 Tenant              @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  subscription           Subscription        @relation(fields: [subscription_id], references: [id], onDelete: Cascade)
  payment_integration    PaymentIntegration? @relation(fields: [payment_integration_id], references: [id], onDelete: SetNull)
  
  // 约束和索引
  @@unique([provider, provider_invoice_id])
  @@index([tenant_id])
  @@index([subscription_id])
  @@index([status])
  @@index([due_date])
  @@index([created_at])
  
  @@map("invoices")
}

// 会话表 - 保持不变
model Session {
  id            String   @id @default(uuid()) @db.Uuid
  tenant_id     String   @db.Uuid
  token_hash    String   @unique @db.VarChar(255)
  refresh_token String?  @unique @db.VarChar(255)
  user_agent    String?  @db.Text
  ip_address    String?  @db.VarChar(45)
  expires_at    DateTime
  deleted_at    DateTime?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  
  // 关联关系
  tenant        Tenant   @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  
  // 索引
  @@index([tenant_id])
  @@index([token_hash])
  @@index([expires_at])
  @@index([created_at])
  @@index([deleted_at])
  
  @@map("sessions")
}

// Token黑名单表 - 保持不变
model TokenBlacklist {
  id                String    @id @default(cuid())
  jti               String    @unique  // JWT ID
  tenant_id         String?   @db.Uuid // 关联的租户ID（用于全局撤销）
  expires_at        DateTime  // token原始过期时间
  reason            String    @default("revoked") // 撤销原因
  revoke_all_before DateTime? // 如果设置，表示撤销此时间前的所有token
  created_at        DateTime  @default(now())
  
  @@index([jti])
  @@index([tenant_id])
  @@index([expires_at])
  @@map("token_blacklist")
}

// 订阅状态枚举
enum SubscriptionStatus {
  TRIAL      @map("trial")      // 试用期
  ACTIVE     @map("active")     // 活跃
  PAST_DUE   @map("past_due")   // 逾期
  CANCELED   @map("canceled")   // 已取消
  SUSPENDED  @map("suspended")  // 暂停
  EXPIRED    @map("expired")    // 过期
  
  @@map("subscription_status")
}

// 订阅计划枚举
enum SubscriptionPlan {
  BASIC      @map("basic")      // 基础版
  STANDARD   @map("standard")   // 标准版
  PRO        @map("pro")        // 专业版
  PREMIUM    @map("premium")    // 高级版
  
  @@map("subscription_plan")
}

// 支付提供商枚举
enum PaymentProvider {
  STRIPE     @map("stripe")     // Stripe
  PAYPAL     @map("paypal")     // PayPal
  SQUARE     @map("square")     // Square
  CLOVER     @map("clover")     // Clover
  WECHAT     @map("wechat")     // 微信支付
  ALIPAY     @map("alipay")     // 支付宝
  UNIONPAY   @map("unionpay")   // 银联支付
  
  @@map("payment_provider")
} 