version: "3.9"

networks:
  tymoe-network:
    driver: bridge

volumes:
  auth_logs:
    driver: local
  nginx_logs:
    driver: local
  certbot_conf:
    driver: local
  certbot_www:
    driver: local
  redis_data:
    driver: local

services:
  redis:
    image: redis:7-alpine
    container_name: tymoe-redis
    restart: unless-stopped
    command: redis-server --requirepass tymoe_redis_2025
    volumes:
      - redis_data:/data
      - certbot_conf:/etc/letsencrypt:ro  # 添加证书访问
    networks:
      - tymoe-network

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-service-app
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - auth_logs:/app/logs
      - certbot_conf:/etc/letsencrypt:ro  # 添加证书访问
    expose:
      - "8080"
    networks:
      - tymoe-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]  # 修复健康检查端点
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: tymoe-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./frontend/dist:/usr/share/nginx/html:ro  # 前端静态文件
      - nginx_logs:/var/log/nginx
      - certbot_conf:/etc/letsencrypt:ro  # 证书访问
      - certbot_www:/var/www/certbot
    networks:
      - tymoe-network
    depends_on:
      - auth-service

  # 添加一个专门的前端服务容器（可选）
  frontend:
    image: nginx:alpine
    container_name: tymoe-frontend
    restart: unless-stopped
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - certbot_conf:/etc/letsencrypt:ro  # 前端也可以使用证书
    expose:
      - "80"
      - "443"
    networks:
      - tymoe-network